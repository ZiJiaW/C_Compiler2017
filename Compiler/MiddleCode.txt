void testDeclare()
t0 = 312
t1 = 142
t2 = t0 + t1
sum = t2
t3 = 'a'
t5 = t3 - 32
hih = t5
t6 = 'C'
t8 = t6 + 32
lowct = t8
t9 = '3'
t11 = t9 + 1
uppp = t11
t13 = 312
t15 = t13 - 300
arr[0] = t15
t17 = 142
t19 = t17 - 140
arr[1] = t19
write sum
write t20
write hih
write t21
write lowct
write t22
write uppp
write t23
t25 = arr[0]
write t25
write t26
t28 = arr[1]
write t28
end_func testDeclare
void testForAndArray()
t29 = 'a'
p = t29
Label_t30:
t32 = p
t33 = 'a'
t34 = t32 - t33
t35 = p
ch2[t34] = t35
t36 = p
t37 = 'a'
t38 = t36 - t37
t39 = ch2[t38]
write t39
p = p + 1
t40 = p
t42 = t40 - 'z'
blez Label_t30, t42
m = 50
sum = 0
n = 100
Label_t46:
t48 = sum
t49 = n
t50 = t48 + t49
sum = t50
t52 = n
t53 = m
bne Label_t51, t52, t53
m = 20
JMP Label_t55
Label_t51:
t56 = n
t58 = t56 - 1
n = t58
Label_t55:
n = n - 1
t59 = n
t60 = m
t61 = t59 - t60
bgez Label_t46, t61
write t62
write sum
n = 0
Label_t64:
t67 = n
t69 = t67 - 0
bgez Label_t66, t69
ret
end_func testForAndArray
JMP Label_t70
Label_t66:
Label_t70:
write t71
n = n - 1
t72 = n
t74 = t72 - 0
bltz Label_t64, t74
end_func testForAndArray
int sum()
para int a
para int b
t75 = a
t76 = b
t77 = t75 + t76
ret t77
end_func sum
end_func sum
int testExpression()
s = 0
t79 = 32
t80 = -13
t82 = t80 + 31
t83 = '9'
t85 = t83 - '0'
t87 = t85 / 3
t88 = t82 - t87
t90 = t88 + 0
t91 = t79 * t90
t92 = -t91
t95 = 11 / 5
t96 = -t95
t98 = ch2[9]
t100 = t98 - 'a'
t102 = t100 * 2
t103 = t96 + t102
t104 = t92 + t103
cal = t104
write cal
t106 = 32
t107 = -13
t109 = t107 + 31
t110 = '9'
t112 = t110 - '0'
t114 = t112 / 3
t115 = t109 - t114
t117 = t115 + 0
t118 = t106 * t117
t119 = -t118
t122 = 11 / 5
t123 = -t122
t125 = ch2[9]
t127 = t125 - 'a'
t129 = t127 * 2
t130 = t123 + t129
t131 = t119 + t130
t132 = -13
t134 = t132 + 31
t135 = t131 - t134
bgtz Label_t105, t135
write t136
JMP Label_t137
Label_t105:
write t138
Label_t137:
t140 = -3
t142 = t140 + 0
t143 = -13
t145 = t143 + 31
push t145
t146 = '9'
t148 = t146 - '0'
t150 = t148 / 3
t151 = -t150
t153 = t151 + 0
push t153
call sum
t154 = ret
t155 = t142 + t154
loop = t155
Label_t156:
t158 = s
t159 = loop
t160 = t158 + t159
s = t160
loop = loop + 1
t161 = loop
t164 = ch2[9]
t166 = t164 - 'a'
t168 = t166 * 2
t169 = 15 + t168
push t169
t172 = 3 * 5
t174 = t172 / 7
t175 = -t174
t178 = 17 / 2
t179 = t175 - t178
push t179
call sum
t180 = ret
t181 = t161 - t180
blez Label_t156, t181
write t182
write loop
t183 = 32
t184 = -13
t186 = t184 + 31
t187 = '9'
t189 = t187 - '0'
t191 = t189 / 3
t192 = t186 - t191
t194 = t192 + 0
t195 = t183 * t194
t196 = -t195
t199 = 11 / 5
t200 = -t199
t202 = ch2[9]
t204 = t202 - 'a'
t206 = t204 * 2
t207 = t200 + t206
t208 = t196 + t207
ret t208
end_func testExpression
end_func testExpression
int sq_dist()
para int x1
para int x2
para int x3
para int x4
t209 = x2
t210 = x1
t211 = t209 - t210
t212 = x2
t213 = x1
t214 = t212 - t213
t215 = t211 * t214
t216 = x4
t217 = x3
t218 = t216 - t217
t219 = x4
t220 = x3
t221 = t219 - t220
t222 = t218 * t221
t223 = t215 + t222
ret = t223
t224 = ret
t226 = t224 + 1
t228 = t226 * 2
t230 = t228 / 2
t232 = t230 - 1
ret t232
end_func sq_dist
end_func sq_dist
int fact()
para int n
t234 = n
bne Label_t233, t234, 1
ret 1
end_func fact
JMP Label_t237
Label_t233:
Label_t237:
t238 = n
t239 = n
t241 = t239 - 1
push t241
call fact
t242 = ret
t243 = t238 * t242
ret t243
end_func fact
end_func fact
int reduce()
para int n
t245 = n
bne Label_t244, t245, 1
ret 1
end_func reduce
JMP Label_t248
Label_t244:
Label_t248:
t249 = n
t250 = n
t252 = t250 - 1
push t252
call reduce
t253 = ret
t254 = t249 + t253
ret t254
end_func reduce
end_func reduce
int reduce_to_m()
para int n
para int m
r = 0
Label_t256:
t258 = r
t259 = n
t260 = t258 + t259
r = t260
n = n - 1
t261 = n
t262 = m
t263 = t261 - t262
bgez Label_t256, t263
t264 = r
ret t264
end_func reduce_to_m
end_func reduce_to_m
char Lower()
para char ch
t265 = ch
t267 = t265 + 32
ret t267
end_func Lower
end_func Lower
void main()
read i
read s1
t269 = i
t271 = t269 - 0
bgez Label_t268, t271
write t272
ret
end_func main
JMP Label_t273
Label_t268:
Label_t273:
t275 = i
t278 = 12 / 6
t280 = t278 * 5
t282 = t280 + 1
t284 = t282 - 1
beq Label_t274, t275, t284
write t285
write i
ret
end_func main
JMP Label_t286
Label_t274:
Label_t286:
t288 = s1
bne Label_t290, 50, t288
t291 = i
t293 = t291 + 6
t295 = t293 / 2
push t295
call fact
t296 = ret
k = t296
write t297
write k
JMP Label_t287
Label_t290:
bne Label_t299, 51, t288
t300 = 1000
t301 = i
t302 = t300 / t301
t303 = s1
t304 = t302 + t303
t306 = t304 - '0'
push t306
call reduce
t307 = ret
j = t307
write t308
write j
JMP Label_t287
Label_t299:
bne Label_t310, 52, t288
t311 = 1000
t312 = 81
t313 = t311 + t312
t314 = -15
t316 = t314 * 5
t317 = t313 + t316
t318 = 0
t319 = t317 - t318
t320 = 's'
t321 = t319 + t320
t323 = t321 - 's'
t325 = t323 - 6
t327 = t325 / 10
t328 = '1'
t329 = t327 + t328
t331 = t329 - '1'
k = t331
write t332
t333 = k
push t333
push 50
call reduce_to_m
t335 = ret
write t335
JMP Label_t287
Label_t310:
bne Label_t337, 53, t288
s1 = 'A'
Label_t339:
t341 = s1
t343 = t341 - 'A'
t344 = s1
push t344
call Lower
t345 = ret
s5[t343] = t345
t346 = s1
t348 = t346 - 'A'
t349 = s5[t348]
write t349
s1 = s1 + 1
t350 = s1
t352 = t350 - 'Z'
blez Label_t339, t352
write s5
JMP Label_t287
Label_t337:
bne Label_t354, 54, t288
call testDeclare
write t355
call testForAndArray
JMP Label_t287
Label_t354:
bne Label_t357, 55, t288
call testExpression
t358 = ret
k = t358
write t359
write k
JMP Label_t287
Label_t357:
write t360
t361 = i
push t361
t362 = 81
push t362
t363 = -15
push t363
t364 = 13
push t364
call sq_dist
t365 = ret
write t365
Label_t287:
ret
end_func main
end_prog main
