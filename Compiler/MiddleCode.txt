void recor_printU()
para int N
t0 = 'c'
t1 = 'c'
t2 = t0 + t1
l = t2
t5 = 2 * 3
t9 = 3 * 1
t12 = 3 + 4
t14 = t12 + 5
t18 = 7 * 8
t20 = t18 * 9
t22 = t20 - 23
t23 = 6 * t22
t24 = t14 + t23
t26 = t24 * 34
t27 = t9 + t26
t29 = t27 - 21
t30 = 4 * t29
t32 = t30 * 14
t33 = t5 - t32
s = t33
t36 = 3 * -4
t37 = -t36
t40 = 2 / 1
t41 = t37 - t40
t = t41
t44 = 2 / -1
t45 = -t44
t48 = 6 / -2
t49 = t45 - t48
t1 = t49
i = 0
Label_t51:
t53 = i
t54 = i
list[t53] = t54
t55 = i
t56 = list[t55]
t = t56
write t57
t58 = i
t59 = list[t58]
write t59
i = i + 1
t60 = i
t61 = N
bne Label_t51, t60, t61
end_func recor_printU
void recor_printD()
para int N
t63 = N
beq Label_t62, t63, 0
write t65
write N
t66 = N
t68 = t66 - 1
push t68
call recor_printD
JMP Label_t69
Label_t62:
Label_t69:
end_func recor_printD
int Isright()
para int N
para char type
t71 = N
t73 = t71 - 100
bltz Label_t70, t73
write t74
ret 0
end_func Isright
JMP Label_t76
Label_t70:
Label_t76:
t78 = N
t80 = t78 - 0
blez Label_t77, t80
t82 = type
bne Label_t81, t82, 'u'
ret 1
end_func Isright
JMP Label_t85
Label_t81:
Label_t85:
t87 = type
bne Label_t86, t87, 'd'
ret 2
end_func Isright
JMP Label_t90
Label_t86:
Label_t90:
JMP Label_t91
Label_t77:
Label_t91:
ret 0
end_func Isright
end_func Isright
void sumandmul()
para int N
sum = 0
mul = 1
i = 0
Label_t96:
t98 = sum
t99 = i
t100 = t98 + t99
sum = t100
i = i + 1
t101 = i
t102 = N
bne Label_t96, t101, t102
write sum
write t103
i = 0
Label_t105:
t108 = i
t109 = list[t108]
beq Label_t107, t109, 0
t111 = mul
t112 = i
t113 = list[t112]
t114 = t111 * t113
mul = t114
JMP Label_t115
Label_t107:
Label_t115:
i = i + 1
t116 = i
t117 = N
bne Label_t105, t116, t117
write mul
end_func sumandmul
void main()
write t118
read N
read type
t119 = N
push t119
t120 = type
push t120
call Isright
t121 = ret
t = t121
t123 = t
bne Label_t125, 1, t123
t126 = N
push t126
call recor_printU
JMP Label_t122
Label_t125:
bne Label_t128, 2, t123
l = 0
t130 = N
push t130
call recor_printD
JMP Label_t122
Label_t128:
bne Label_t132, 0, t123
write t133
JMP Label_t122
Label_t132:
write t134
Label_t122:
t136 = t
beq Label_t135, t136, 0
write t138
read t
t140 = t
bne Label_t139, t140, 1
t142 = N
push t142
call sumandmul
JMP Label_t143
Label_t139:
write t144
Label_t143:
JMP Label_t145
Label_t135:
Label_t145:
write t146
end_prog main
